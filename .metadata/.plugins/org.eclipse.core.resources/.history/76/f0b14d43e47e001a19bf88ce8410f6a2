import java.awt.Color;
import java.util.ArrayList;

import javax.swing.JFrame;

public class Main{
	static	GameObjectlist gos;

	public static void main(String[] args) {
		JFrame frame = new JFrame("シューティング");
		frame.setSize(670,500);
		frame.setVisible(true);
		frame.setDefaultCloseOperation(frame.EXIT_ON_CLOSE);

		Jiki jiki = new Jiki();

		gos = new GameObjectlist();
		gos.addJiki(jiki);

		for(int i=0;i<5;i++) {
			for(int j =0;j<10;j++) {
				gos.addTeki(new Teki(j*48+10,i*48));
			}
		}

		GamePanel panel=new GamePanel(gos);

		panel.setBackground(Color.black);
		frame.add(panel);

		GameKeyListener kl = new GameKeyListener();
		CollisionListener cl = new CollisionListener();
		frame.addKeyListener(kl);

		panel.repaint();
		panel.revalidate();
		boolean gameoverflg = false;
		while(!gameoverflg ) {
			for(int i = 0;i<gos.size();i++) {
				gos.get(i).update(kl);
				if(cl.update()){
					System.out.println("gamaover");
					gameoverflg = true;
					break;
				}

			}
			panel.repaint();
			try {
				Thread.sleep(30);
			} catch (InterruptedException e) {
				// TODO 自動生成された catch ブロック
				e.printStackTrace();
			}
		}
	}

	private static ArrayList<Tama> getTamalist() {
		ArrayList<Tama> tamalist = new ArrayList<Tama>();
		for(int i = 0;i<gos.size();i++) {
			if(gos.get(i) instanceof Tama){
				tamalist.add((Tama)gos.get(i));
			}
		}
		return tamalist;
	}

	private static ArrayList<Teki> getTekilist() {
		ArrayList<Teki> tekilist = new ArrayList<Teki>();
		for(int i = 0;i<gos.size();i++) {
			if(gos.get(i) instanceof Teki){
				tekilist.add((Teki)gos.get(i));
			}
		}
		return tekilist;
	}

	private static Jiki getJiki() {
		for(int i = 0;i<gos.size();i++) {
			if(gos.get(i) instanceof Jiki){
				return (Jiki)gos.get(i);
			}
		}
		return null;
	}


	static void addGameObject(GameObject go) {
		gos.add(go);
	}

	public static void remove(GameObject go) {
		gos.remove(go);
	}
}
